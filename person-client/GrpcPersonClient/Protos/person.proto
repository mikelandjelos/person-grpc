syntax = "proto3";

option csharp_namespace = "GrpcPersonClient";

package person;

service PersonService {
  rpc CreatePerson(CreatePersonRequest) returns (CreatePersonResponse);
  rpc GetPerson(GetPersonRequest) returns (GetPersonResponse);
  rpc GetPeople(GetPeopleRequest) returns (GetPeopleResponse);
  rpc UpdatePerson(UpdatePersonRequest) returns (UpdatePersonResponse);
  rpc DeletePerson(DeletePersonRequest) returns (DeletePersonResponse);
  
  // Bidirectional streaming
  rpc DeletePeople(stream DeletePersonRequest) returns (stream DeletePersonResponse);
}

// Auxiliary types

enum PhoneType {
  MOBILE = 0;
  HOME = 1;
  WORK = 2;
}

message PhoneNumber {
  string number = 1; // required
  PhoneType type = 2;
}

message Person {
  int32 id = 1;
  string name = 2;
  optional string email = 3;
  repeated PhoneNumber phone_numbers = 4;
}

// Main communication types

// Request types

message CreatePersonRequest {
  Person person = 1;
}

message GetPersonRequest {
  int32 id = 1;
}

message GetPeopleRequest {
  int32 starting_id = 1;
  int32 ending_id = 2; // excluded
}

message UpdatePersonRequest {
  int32 id = 1;
  optional string name = 2;
  optional string email = 3;
  repeated PhoneNumber phones = 4;
}

message DeletePersonRequest {
  int32 id = 1; // required
}

// Response types

message ResponseMetadata {
  string message = 1;
  int32 status = 2;
}

message CreatePersonResponse {
  int32 created_id = 1;
  ResponseMetadata metadata = 2;
}

message GetPersonResponse {
  Person retreived_person = 1;
  ResponseMetadata metadata = 2;
}

message GetPeopleResponse {
  repeated Person retreived_people = 1;
  ResponseMetadata metadata = 2;
}

message UpdatePersonResponse {
  Person updated_person = 1;
  ResponseMetadata metadata = 2;
}

message DeletePersonResponse {
  int32 deleted_id = 1;
  ResponseMetadata metadata = 2;
}